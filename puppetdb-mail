#!/usr/bin/env ruby
#
# Use the already created puppet node state yaml file to send out a mailing
# about each server failed, quiet, or tangled.

require 'github_create_issues'
require 'net/smtp'
require 'yaml'

#EMAIL_TO = 'sul-sysadmin-rpts@lists.stanford.edu'.freeze
#PUPPET_STATE = '/var/lib/systems-dashboard/puppetstate.yaml'

EMAIL_TO = 'jonrober@stanford.edu'.freeze
PUPPET_STATE = '/tmp/puppetstate.yaml'

@SYSADMINS = %w(jonrober ssklar rsmith11 efahy azanella jmorley kamchan)
@DEFAULT_ASSIGNEE = 'jonrober'

# Data for github issue creation.
repo  = 'sul-dlss/operations-tasks'
label = 'puppet-notreporting'
token = File.open('/etc/github-issues/oauth-token', 'rb').read
desc = 'Please check to make sure that puppet is running, enabled, and against a good branch.'

#############################################################################
# Support functions
#############################################################################

def server_assignee(environment)
  assignee = @DEFAULT_ASSIGNEE
  @SYSADMINS.each do |s|
    next unless environment =~ /^#{s}/
    assignee = s
    break
  end

  assignee
end

#############################################################################
# Main routine
#############################################################################

quiet = {}
tangled = []
failed = []
report = YAML.load_file(PUPPET_STATE)
report.keys.each do |server|
  failed.push(server) if report[server].key?('failed')
  tangled.push(server) if report[server].key?('tangled')

  next unless report[server].key?('too_quiet')
  quiet[server] = report[server]['too_quiet']
end

message = ''
message << "From: Do Not Reply <nobody@stanford.edu>\n"
message << "To: #{EMAIL_TO}\n"
message << "Subject: Puppet servers currently having problems\n"
message << "\n"

message << "Servers with failed puppet runs\n"
message << "-------------------------------\n"
failed.sort.each do |server|
  message << server + "\n"
end
message << "\n"

message << "Servers without any puppet runs for over 24 hours\n"
message << "-------------------------------------------------\n"
quiet.keys.sort.each do |server|
  message << format("%-45s %s\n", server, quiet[server])
end

#Net::SMTP.start('localhost') do |smtp|
#  smtp.send_message message, 'nobody@stanford.edu', EMAIL_TO
#end

puts message

issues = {}
quiet.keys.each do |server|
  assignee = server_assignee(report[server]['environment'])
  issues[assignee] = [] unless issues.key?(assignee)
  issues[assignee].push("#{server} has not run puppet in over 24 hours")
end
failed.each do |server|
  assignee = server_assignee(report[server]['environment'])
  issues[assignee] = [] unless issues.key?(assignee)
  issues[assignee].push("#{server}'s puppet runs are failing'")
end

# Now create each of these as a github issue.
issues.each_key do |assignee|
  i = issues[assignee]
#  GithubCreateIssues.add_github_issues(token, repo, label, i, desc, assignee)
  puts "#{assignee}: #{i}"
end
